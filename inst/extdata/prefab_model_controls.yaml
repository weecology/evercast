AutoArima:
  metadata:
    name: AutoArima
    descriptor: classic model
    text: AutoArima (Automatic Auto-Regressive Integrated Moving Average) is a flexible Auto-Regressive Integrated Moving Average (ARIMA) model fit to the data. The model is selected and  fitted using the `auto.arima` and `forecast` functions in the **forecast** package [@Hyndman2013; @Hyndman2017] within the `AutoArima()` function. Generally, ARIMA models are defined according to three model structure parameters -- the number of autoregressive terms (p), the degree of differencing (d), and the order of the moving average (q), and are represented as ARIMA(p, d, q) [@Box1970]. No seasonal models were evaluated. AutoArima is fit flexibly, such that the model parameters can vary from fit to fit.
  fun: auto.arima
  args: 
    "y": quote(abundance)
  interpolate: 
    needed: no
  datasets:
  - all_total
  response: 
    link: normal
    type: distribution 
  time: year
nbGARCH:
  metadata:
    name: nbGARCH
    descriptor: classic model, requires interpolation
    text: nbGARCH (Negative Binomial Auto-Regressive Conditional Heteroskedasticity) is a generalized autoregressive conditional heteroskedasticity (GARCH) model with overdispersion (*i.e.*, a negative binomial response) fit to the interpolated data at the composite (full site and just control plots) spatial level and both the composite (community) and the articulated (species) ecological levels. The model for each species and the community total is selected and fitted using the `tsglm` function in the **tscount** package [@Liboschik2017a] within the `nbGARCH()` function. GARCH models are generalized ARMA models and are defined according to their link function, response distribution, and two model structure parameters -- the number of autoregressive terms (p) and the order of the moving average (q), and are represented as GARCH(p, q) [@Liboschik2017a]. The nbGARCH model is fit using the log link and a negative binomial response (modeled as an over-dispersed Poisson), as well as with p = 1 (first-order autoregression) and q = NULL (no moving average). The `tsglm` function in the **tscount** package [@Liboschik2017a] uses a (conditional) quasi-likelihood based approach to inference and models the overdispersion as an additional parameter in a two-step approach. This two-stage approach has only been minimally evaluated, although preliminary simulation-based studies are promising [@Liboschik2017b].
  fun: tsglm
  args: 
    ts: abundance
    model: 
      past_obs: 1
      past_mean: 12
    distr: nbinom
    link: log
  interpolate: 
    needed: yes
    fun: round_na.interp
  datasets:
  - all_total
  response: 
    link: negative_binomial
    type: distribution
  time: year
pGARCH:
  metadata:
    name: pGARCH
    descriptor: classic model, requires interpolation
    text: pGARCH (Poisson Auto-Regressive Conditional Heteroskedasticity) is a generalized autoregressive conditional heteroskedasticity (GARCH) model with overdispersion (*i.e.*, a Poisson response) fit to the interpolated data at the composite (full site and just control plots) spatial level and both the composite (community) and the articulated (species) ecological levels. The model for each species and the community total is selected and fitted using the `tsglm` function in the **tscount** package [@Liboschik2017a] within the `pGARCH()` function. GARCH models are generalized ARMA models and are defined according to their link function, response distribution, and two model structure parameters -- the number of autoregressive terms (p) and the order of the moving average (q), and are represented as GARCH(p, q) [@Liboschik2017a]. The pGARCH model is fit using the log link and a Poisson response, as well as with p = 1 (first-order autoregression) and q = NULL (no moving average). The `tsglm` function in the **tscount** package [@Liboschik2017a] uses a (conditional) quasi-likelihood based approach to inference and models the overdispersion as an additional parameter in a two-step approach. This two-stage approach has only been minimally evaluated, although preliminary simulation-based studies are promising [@Liboschik2017b].
  fun: tsglm
  args: 
    ts: abundance
    model: 
      past_obs: 1
      past_mean: 12
    distr: poisson
    link: log
  interpolate: 
    needed: yes
    fun: round_na.interp
  datasets:
  - all_total
  response: 
    link: poisson
    type: distribution
  time: year